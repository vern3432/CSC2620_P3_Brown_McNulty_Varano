<diagram program="umletino" version="15.1"><zoom_level>10</zoom_level><help_text>Space for diagram notes</help_text><element><id>UMLClass</id><coordinates><x>0</x><y>30</y><w>330</w><h>200</h></coordinates><panel_attributes>&lt;&lt;Stereotype&gt;&gt;
Package::FamilyTree
{Some Properties}
--
Objects
--
_object: FamilyTreeContainer_
--
members: List&lt;FamilyMember&gt;
--
# addMember(member: FamilyMember): void
# removeMember(member: FamilyMember): void
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>10</x><y>380</y><w>610</w><h>430</h></coordinates><panel_attributes>_object: FamilyMember_
--
name: String
birthDate: Date
parents: List&lt;FamilyMember&gt;
children: List&lt;FamilyMember&gt;
spouse: FamilyMember
isLiving: boolean
currentResidence: String
deathDate: Date
--
+ FamilyMember()
+ getName(): String
+ setName(name: String): void
+ getBirthDate(): Date
+ setBirthDate(date: Date): void
+ getParents(): List&lt;FamilyMember&gt;
+ addChild(child: FamilyMember): void
+ removeChild(child: FamilyMember): void
+ getSpouse(): FamilyMember
+ setSpouse(spouse: FamilyMember): void
+ isLiving(): boolean
+ setLiving(living: boolean): void
+ getCurrentResidence(): String
+ setCurrentResidence(residence: String): void
+ getDeathDate(): Date
+ setDeathDate(date: Date): void
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>730</x><y>350</y><w>320</w><h>140</h></coordinates><panel_attributes>_object: FamilyTreeContainer_
--
members: HasMap&lt;String,FamilyMember&gt;
--
+ FamilyTree(members:List&lt;FamilyMember&gt;)
+ addMember(member: FamilyMember): void
+ removeMember(member: FamilyMember): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>370</x><y>0</y><w>800</w><h>310</h></coordinates><panel_attributes>object: FamilyDatabase
--
    - connection: Connection
    - DB_FILE_NAME: String
--
    + FamilyDatabase()
    + createBlankTables(): void
    + getNextClientId(): int
    + insertClient(clientName: String): int
    + getNextMemberId(): int
    + getNextRelationshipId(): int
    + insertFamilyMember(name: String, birthDate: Date, deathDate: Date, isDeceased: boolean, currentResidence: String, clientId: int): int
    + insertRelationship(memberId: int, relatedMemberId: int, relationType: String): int
    + insertEvent(eventDate: Date, eventType: String, memberId: int): int
    + getNextAddressId(): int
    + insertAddress(city: String, memberId: int): int
    + getNextEventId(): int
    + getClientName(clientId: int): String
    + getMemberName(memberId: int): String
    + getMemberIdByNameAndBirthDate(name: String, birthDate: Date): int
    + main(args: String[]): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>630</x><y>510</y><w>670</w><h>330</h></coordinates><panel_attributes> FamilyMember
--
    - name: String
    - birthDate: Date
    - deathDate: Date
    - isDeceased: boolean
    - currentResidence: String
--
    + FamilyMember(name: String, birthDate: Date, deathDate: Date, isDeceased: boolean, currentResidence: String)
    + setName(name: String): void
    + setBirthDate(birthDate: Date): void
    + setDeathDate(deathDate: Date): void
    + setDeceased(deceased: boolean): void
    + setCurrentResidence(currentResidence: String): void
    + getName(): String
    + getBirthDate(): Date
    + getDeathDate(): Date
    + isDeceased(): boolean
    + getCurrentResidence(): String</panel_attributes><additional_attributes></additional_attributes></element></diagram>